//Questao1
#include <stdio.h>
#include <stdlib.h>

int main(){

    int a = 40;
    int *p = &a;
    printf("%d",p);
    printf("\n%d",a);
    printf("\n%d",&a);
    printf("\n%d", *p);

    printf("\nAlterando o valor da variavel a: ");
    scanf("%d", *p);
    &a = p;
    printf("%d", a);
    
    return 0;
}
//Questao2
#include <stdio.h>
#include <stdlib.h>

int main(){
    char nome[100] = "Jose Augusto";
    char *ptn;
    int i = 0;
    do{
        *ptn = nome[i];
        printf("%c", *ptn);
        i++;
    }while(*ptn != '\0');
    
return 0;
}
//Questao3
#include <stdio.h>
#include <stdlib.h>

int main(){
    double elbuod [10] = {2,4,8,16,32,64,128,256,512,1024};
    int i = 0;
    while(i < 10){
        printf("\n%lf", *(elbuod + i));
        i++;
    }
    
    return 0;
}
//Questao4
#include <stdio.h>
#include <stdlib.h>

int main(){
    int pedrao[10] = {0,1,2,3,4,5,6,7,8,9};
    int i = 10;
    while(i != 0){
        printf("\n%d", *(pedrao + i));
        i--;
    }
    
    return 0;
}
//Questao5
#include <stdio.h>
#include <stdlib.h>

int main(){

    int *array = (int *) malloc(5 * sizeof(int));

    for (int i = 0; i < 5; i++)
    {
        printf("\n Informe o valor para a posicao %d do vetor: ", i+1);
        scanf("%d",&array[i]);
    }

    for (int i = 0;i < 5; i++)
    {
        printf("%d\n",array[i]);
    }

    free(array);
    array = NULL;
    
    return 0;
}
//Questao6
#include <stdio.h>
#include <stdlib.h>

int main(){

    int qtd;
    printf("Informe quantos valores vai usar: ");
    scanf("%d", &qtd);
    int pares = 0, impares = 0;

    int *array = (int *) malloc(qtd * sizeof(int));

    for (int i = 0; i < qtd; i++)
    {
        printf("\n Informe o valor para a posicao %d do vetor: ", i+1);
        scanf("%d",&array[i]);
        if(array[i] % 2 == 0) pares++;
        else impares++;
     }

    printf("\nSao pares: %d dos %d inteiros lidos", pares, qtd);
    printf("\nSao impares: %d dos %d inteiros lidos", impares, qtd);

    free(array);
    array = NULL;

    return 0;
}
//Questao7
#include <stdio.h>
#include <stdlib.h>

typedef struct pontos{
    int x,y;
}Pontos;

int main(){
    int qtd;
    printf("Informe quantos valores vai usar: ");
    scanf("%d", &qtd);
    Pontos *p = (Pontos *) malloc(qtd*sizeof(Pontos));
    p[qtd];

    for(int i=0; i<qtd; i++){
        printf("\nInforme o valor de x: ");
        scanf("%d", &p[i].x);
        printf("\nInforme o valor de y: ");
        scanf("%d", &p[i].y);
    }

    for (int i = 0; i<qtd; i++){
        printf("\nx: %d", p[i].x);
        printf("\ny: %d", p[i].y);
    }

    free(p);
    p = NULL;
    return 0;
}
//Questao8
#include <stdio.h>

int calcula_area(int x1, int y1, int x2, int y2);

int main(){
    int x1 = 1, x2 = 2, y1 = 1, y2 = 2, response;
    response = calcula_area(x1, y1, x2, y2);
    printf("\n√Årea eh: %d", response);
    return 0;
}

int calcula_area(int x1, int y1, int x2, int y2){
    int area = (x1 - x2) * (y1 - y2);
    if(area < 0) return (area * (-1));
    else return area;
}
//Questao9
#include <stdio.h>

int function1(int x, int y);
int function2(int x, int y);

int main(){
    int x = 1, y = 2, constante = 4, response, response_;
    printf("\nResultados: %d %d", function1(x, constante), function2(y, constante));
    return 0;
}

int function1(int x, int y){
    return (x * y);
}

int function2(int x, int y){
    return (x * y);
}
//Questao10
#include <stdio.h>
#include <stdlib.h>

typedef struct ponto{
    int x, y;
}Ponto;

void inc_dir(Ponto *p1);

int main(){
    Ponto pto;

    pto.x = 1;
    pto.y = 2;

    inc_dir(&pto);

    return 0;
}

void inc_dir(Ponto *p1){

    Ponto *pto = (Ponto *) malloc (1 * sizeof(Ponto));

    if(pto == NULL)
        printf("Erro ao alocar memoria");

    (*pto).x = (p1->x + 1);
    (*pto).y = (p1->y + 0);
    printf("\n+1 Leste");
           
    (*pto).x = p1->x - 1;
    (*pto).y = p1->y - 0;
    printf("\n+1 Oeste");
              
    (*pto).y = p1->y + 1;
    (*pto).x = p1->y + 0;
    printf("\n+1 Norte");
                
    (*pto).y = p1->y - 1;
    (*pto).x = p1->x - 0;
    printf("\n+1 Sul");

    free(pto); 
    pto = NULL;    
}
//Questao11
#include <stdio.h>

int main()
{

    double *vet[3] = {0.0, 1.0, 2.0};
    int i;
    double maior, menor;

    for (i = 0; i < 2; i++)
    {
        printf("v[%d]: %.1f", i, vet[i]);
    }

    for (i = 0; i < 3; i++)
    {
        maior = vet[0];
        if (vet[i] > maior)
        {
            maior = vet[i];
            printf("Maior: %.1f", vet[i]);
        }
    }
    
    for (i = 0; i < 3; i++)
    {
        menor = vet[0];
        if (vet[i] < menor)
        {
            menor = vet[i];
            printf("Menor: %.1f", menor);
        }
    }

    return 0;
}
//Questao12
***
//Questao13
#include <stdio.h>
#include <stdlib.h>

int * aloca_inteiro(int n);
void imprime_vet(int *p,int n);

int main(){

    int *pto, n = 10;

    pto = aloca_inteiro(10);
    printf("\n\nImprimindo...\n");
    imprime_vet(pto,n);

    free(pto);
    pto = NULL;

    return 0;
}

int * aloca_inteiro(int n){
    int *pto = (int*)malloc(n * sizeof(int));

    if(pto==NULL)
        printf("Erro ao alocar memoria");

    for(int i=0;i<n;i++) pto[i]= 0;

    return pto;

    free(pto);
    pto = NULL;
}

void imprime_vet(int *p,int n){
    for(int i=0;i<n;i++) printf("\n%d ",p[i]);
}
//Questao14
#include <stdio.h>
#include <stdlib.h>

double* to_double(int *v, int tam);

int main(){
    int vet[10] = {2,4,8,16,32,64,128,256,512,1024};
    double *vet_double = to_double(vet, 10);
    
    for(int i=0;i<10;i++) printf("\n%lf ",vet_double[i]);

    return 0;
}

double* to_double(int *v, int tam){
    double *vet = (double *) malloc (tam * sizeof(double));

    if(vet == NULL)
        printf("Erro ao alocar memoria");

    for(int i=0;i<tam;i++) vet[i] = v[i];
    
    return vet;

    free(vet);
    vet = NULL;
}
